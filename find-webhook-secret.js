/**
 * Check Yoco Webhook Status and Get Registration Instructions
 * Helps you find or create webhook secrets
 */

const checkWebhookStatus = async () => {
  console.log('üîç Checking Your Yoco Webhook Status\n');
  
  try {
    // Test if we can list webhooks (this will tell us about API access)
    const response = await fetch('https://www.littlelattelane.co.za/api/admin/webhooks?action=list');
    const data = await response.json();
    
    if (response.ok && data.success) {
      console.log('‚úÖ API connection working');
      
      if (data.webhooks && data.webhooks.length > 0) {
        console.log('üìã Found existing webhooks:');
        data.webhooks.forEach((webhook, index) => {
          console.log(`${index + 1}. URL: ${webhook.url}`);
          console.log(`   ID: ${webhook.id}`);
          console.log(`   Status: ${webhook.status}`);
          console.log(`   Events: ${webhook.events?.join(', ')}`);
          if (webhook.secret) {
            console.log(`   üîê Secret: ${webhook.secret.substring(0, 8)}...`);
          } else {
            console.log(`   ‚ö†Ô∏è No secret shown - check Yoco dashboard`);
          }
          console.log('');
        });
      } else {
        console.log('üì≠ No webhooks found - you need to create one');
      }
    } else {
      console.log('‚ö†Ô∏è Could not check webhook status via API');
      console.log('This is normal - you\'ll need to check Yoco dashboard manually');
    }
  } catch (error) {
    console.log('‚ö†Ô∏è API check failed - this is normal, use manual method');
  }
  
  console.log('\n' + '='.repeat(60));
  console.log('üìã HOW TO GET YOUR WEBHOOK SECRET');
  console.log('='.repeat(60));
  
  console.log('\nüè¢ YOCO DASHBOARD METHOD (Recommended):');
  console.log('1. Go to: https://portal.yoco.com/');
  console.log('2. Login with your Yoco account');
  console.log('3. Navigate to: Settings ‚Üí Webhooks');
  console.log('4. Look for existing webhooks OR click "Add Webhook"');
  console.log('');
  console.log('IF CREATING NEW WEBHOOK:');
  console.log('‚Ä¢ URL: https://www.littlelattelane.co.za/api/yoco/webhook');
  console.log('‚Ä¢ Events: payment.succeeded, payment.failed');
  console.log('‚Ä¢ After saving, copy the webhook secret shown');
  console.log('');
  console.log('IF WEBHOOK EXISTS:');
  console.log('‚Ä¢ Click on your existing webhook');
  console.log('‚Ä¢ The secret should be displayed there');
  
  console.log('\nüîß WHAT TO DO WITH THE SECRET:');
  console.log('Once you have the webhook secret:');
  console.log('');
  console.log('1. Go to Vercel Dashboard: https://vercel.com/dashboard');
  console.log('2. Find your Little Latte Lane project');
  console.log('3. Go to Settings ‚Üí Environment Variables');
  console.log('4. Add new variable:');
  console.log('   Name: YOCO_WEBHOOK_SECRET');
  console.log('   Value: [paste your webhook secret here]');
  console.log('5. Save and redeploy');
  
  console.log('\n‚ö†Ô∏è IMPORTANT NOTES:');
  console.log('‚Ä¢ The webhook secret is generated by Yoco when you create a webhook');
  console.log('‚Ä¢ It\'s used to verify that webhook calls are really from Yoco');
  console.log('‚Ä¢ Keep it confidential - don\'t share it publicly');
  console.log('‚Ä¢ If you can\'t find it, you may need to delete and recreate the webhook');
  
  console.log('\nüß™ TESTING WITHOUT SECRET:');
  console.log('Your payments will work even without the webhook secret!');
  console.log('The secret is just for extra security verification.');
  console.log('You can test payments first, then add the secret later.');
  
  console.log('\nüÜò IF YOU CAN\'T FIND THE SECRET:');
  console.log('1. Delete the existing webhook in Yoco dashboard');
  console.log('2. Create a new webhook with the same URL');
  console.log('3. Yoco will generate a new secret');
  console.log('4. Copy and save this new secret immediately');
  
  console.log('\n‚úÖ YOUR CURRENT WEBHOOK URL:');
  console.log('https://www.littlelattelane.co.za/api/yoco/webhook');
  console.log('(Use this exact URL when creating the webhook)');
};

checkWebhookStatus().catch(console.error);
